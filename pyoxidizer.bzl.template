def make_dist():
    return default_python_distribution()

def make_exe(dist):
    python_config = PythonInterpreterConfig(
          run_eval="from jsonpath.cli import main; main()",
          sys_paths=["$$ORIGIN/lib"],
    )
    exe = dist.to_python_executable(
        name="jp",
        config=python_config,

        # Only package extension modules that don't require linking against
        # non-Python libraries. e.g. will exclude support for OpenSSL, SQLite3,
        # other features that require external libraries.
        extension_module_filter='no-libraries',

        include_sources=False,
        include_resources=False,
        include_test=False,
    )
    exe.add_in_memory_python_resources(dist.pip_install(["$wheel_path"]))
    return exe

def make_embedded_resources(exe):
    return exe.to_embedded_resources()

def make_install(exe):
    files = FileManifest()
    files.add_python_resource(".", exe)
    return files

# Tell PyOxidizer about the build targets defined above.
register_target("dist", make_dist)
register_target("exe", make_exe, depends=["dist"], default=True)
register_target("resources", make_embedded_resources, depends=["exe"], default_build_script=True)
register_target("install", make_install, depends=["exe"])

resolve_targets()

PYOXIDIZER_VERSION = "0.7.0"
PYOXIDIZER_COMMIT = ""
